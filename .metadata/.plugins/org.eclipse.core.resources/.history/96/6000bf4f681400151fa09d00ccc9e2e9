package com.data2o.learningstorm.storm_example;

import java.util.HashMap;
import java.util.Map;
import java.util.Random;

import backtype.storm.spout.SpoutOutputCollector;
import backtype.storm.task.TopologyContext;
import backtype.storm.topology.OutputFieldsDeclarer;
import backtype.storm.topology.base.BaseRichSpout;
import backtype.storm.tuple.Fields;
import backtype.storm.tuple.Values;

public class LearningStormSpout extends BaseRichSpout {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private SpoutOutputCollector spoutOutputCollector;
	private static final Map<Integer, String> map = new HashMap<Integer,String>();
	
	static  {
		map.put(0, "Facebook");
		map.put(1, "Google");
		map.put(2, "twitter");
		map.put(3, "youtube");
		map.put(4, "linkedin");
	}

	public void nextTuple() {
		// TODO Auto-generated method stub
		final Random rand = new Random();
		int randomNumber = rand.nextInt(4);
		spoutOutputCollector.emit(new Values(map.get(randomNumber)));
	}

	public void open(Map conf, TopologyContext context, SpoutOutputCollector spoutOutputCollector) {
		// TODO Auto-generated method stub
		this.spoutOutputCollector = spoutOutputCollector;
	}

	public void declareOutputFields(OutputFieldsDeclarer declarer) {
		// TODO Auto-generated method stub
		declarer.declare(new Fields("site"));
	}
	
	
	
	

}
